package com.itaka.blog.shiro;

import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.AuthenticationInfo;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.SimpleAuthenticationInfo;
import org.apache.shiro.authz.AuthorizationInfo;
import org.apache.shiro.realm.AuthorizingRealm;
import org.apache.shiro.subject.PrincipalCollection;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 
 * ClassName: ShiroRealm <br/>
 * Function: shiro安全框架验证域 <br/>
 * date: 2018年6月25日 下午5:26:50 <br/>
 * 
 * @author Jerry
 * @version
 */
public class ShiroRealm extends AuthorizingRealm {

	private Logger logger = LoggerFactory.getLogger(getClass());
	
	
	
	/**
	 * 
	 * Function 授权查询回调函数, 进行鉴权但缓存中无用户的授权信息时调用,负责在应用程序中决定用户的访问控制的方法: 
	 * @see org.apache.shiro.realm.AuthorizingRealm#doGetAuthorizationInfo(org.apache.shiro.subject.PrincipalCollection)
	 */
	@Override
	protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection collection) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * 
	 * Function 登录信息和用户验证信息验证: 
	 * @see org.apache.shiro.realm.AuthenticatingRealm#doGetAuthenticationInfo(org.apache.shiro.authc.AuthenticationToken)
	 */
	@Override
	protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {
		logger.info("---class:ShiroRealm---AuthenticationInfo()---start---");
		//得到用户名
		String userName = (String) token.getPrincipal();
		// 得到密码
		String password = new String((char[]) token.getCredentials());
		if (null != userName && null != password) {
			logger.info("---class:ShiroRealm---AuthenticationInfo()---end---");
			return new SimpleAuthenticationInfo(userName, password, getName());
		} else {
			return null;
		}
		
	}

}
